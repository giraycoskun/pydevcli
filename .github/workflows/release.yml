name: Release

on: 
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
      - dev

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        id: setup-python
        with:
          python-version: '3.11'

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.7.0
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
             
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interactionc --sync
  
  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Run tests
        run: |
          poetry run python --version
          poetry run coverage run -m pytest tests/
          poetry run coverage report -m

  docs:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Build docs
        run: |
          poetry run mkdocs build --clean
      - name: Deploy docs to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: site
  
  release:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Create PyPI release
        run: |
          poetry config pypi-token.pypi ${{ secrets.PYPI_TOKEN }}
          poetry publish --build
